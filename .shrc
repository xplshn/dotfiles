# .shrc ##############################
s() {
    export "$1=$2"
}
###################################### This will set the shell's behaviour.
  TMPF="sh_hist-$(date '+%s')"       #  Your lovely sysadmin
  HISTFILE="/tmp/tmp_e$TMPF"         #   --xplshn at github.com/xplshn/Andes
s xHISTFILE "$HISTFILE"              #######################################
  [ -f "/etc/profile.d/std.sh" ] && . "/etc/profile.d/std.sh"              #
[ "$MINPS1" = "0" ] && HOSTNAME="@$(hostname)" || HOSTNAME=""              #
[ "$MINPS1" = "0" ] && PS1USER="$USER" || PS1USER=""                       #
############################################################################

hpwd() {
    if [ "$PWD" = "$HOME" ]; then
        if [ -n "$COOLHOME" ]; then
            printf "%s\n" "$COOLHOME"
        else
            printf "~\n"  # Display '~' if in home directory
        fi
    elif [ "${PWD#"$HOME"/}" != "$PWD" ]; then
        if [ -n "$COOLHOME_DEPTH" ]; then
            printf "%s/%s\n" "$COOLHOME_DEPTH" "${PWD#"$HOME"/}" # Display 'COOLHOME_DEPTH/...' for directories inside home
        else
            printf "%s%s\n" "~/" "${PWD#"$HOME"/}" # Display '~/...' for directories inside home if COOLHOME_DEPTH is not set
        fi
    else
        printf "%s\n" "$PWD" # Display the full path if outside home
    fi
}

set_prompt() {
    PS1='$PS1USER$HOSTNAME$(hpwd)'
    [ "$MINPS1" = "2" ] && PS1='$PS1USER$HOSTNAME$COOLHOME'
    [ "$(id -u)" -eq 0 ] && PS1="${PS1}Î» " || PS1="${PS1}@ "
}

hide_ps1() {
	if [ "$PS1" != "" ];then
		oPS1="$PS1"
		PS1=""
		printf "\x1B[?25l"
	else
		PS1="$oPS1"
		printf "\x1B[?25h"
	fi
}

base16_loader() {
        # Base16 Shell
        BASE16_SHELL="$HOME/.config/base16-shell/"
        [ -n "$PS1" ] &&
                [ -f "$BASE16_SHELL/profile_helper.sh" ] && command -v bash >/dev/null 2>&1 && "$BASE16_SHELL/profile_helper.sh"
}

topused() {
    grep -v -e '^#' -e '^ ' -e '^./' -e '^#@_\\' -e '^@/-_' <~/.sh_history | awk '{print $1}' | sort | uniq -c | sort -nr | head -30
}

alias_loader() {
        alias ls='ls --color=auto'
        alias c='clear'
        alias r='reset'
        alias wttr='wttr --location $LOCATION' # Set your $LOCATION in ~/.profile
        alias e='cleanup ; exit'
        alias exit='rm -f $HISTFILE ; exit'
        alias iambecome='/usr/bin/doas su'
        #### Convenience: #############
        alias '%'='doas'
        alias pwdcp='printf $(pwd) | wl-copy'
        alias rsl='pv -qL 100'
        alias '.,'='ls --color=auto -F'
        alias ',.'='ls --color=auto -FA'
        #### Online: ##################
        alias myip='curl -SsL https://ipinfo.io/ip && printf "\n"'
        alias glbl_status='curl -SsL https://status.plaintext.sh/t'
        alias fortune-online='curl -SsL https://icanhazdadjoke.com | cowsay'
        #### Misc:  ###################
        alias steam='env -u LD_PRELOAD -u LD_LIBRARY_PATH dbus-run-session steam-cachyos.flatimage -no-cef-sandbox'
        alias devEnv='env -u ENV -u LD_PRELOAD -u LD_LIBRARY_PATH $HOME/Documents/TrulyMine/aShitTonOfAppBundles/Go_Fyne_C_devEnv-30_10_2024.AppDir/AppRun /bin/sh'
        boobs() { printf "\033]0;${*:-boobs}\007"; }
        tohex() { echo "$(printf "$*" | od -An -tx1 | awk '{printf "%s ", $0}')"; }
        ###############################
        #### Utils: ###################
        alias 'r:'='bat -p --color=always --map-syntax '*.b*:c' --paging=never'
        ###############################
}

load_profile() {
if [ -r "$HOME/.profile" ]; then
    oPATH="$PATH"
    PATH=""
    . /etc/profile
        . "$HOME/.profile"
        if command -v pelf_linker >/dev/null 2>&1;then
            . "$(command -v pelf_linker)" --export
                LD_LIBRARY_PATH="$PELF_LIBDIRS"
                PATH="$PELF_BINDIRS:$PATH"
        fi
fi
}

show_weatherInfo() {
    if [ -z "$WTTR_SHOWN" ]; then
      if command -v wttr >/dev/null 2>&1; then
          if ping -q -c 1 -W 1 wttr.in >/dev/null 2>&1; then
              wttr --location "$LOCATION"
              WTTR_SHOWN=1
          fi
      fi
    fi
}

start_GSession() {
    #CMD_START_GUI_SESSION="$(echo ~/Applications/swayx* | awk '{print $1}')"
    CMD_START_GUI_SESSION="$HOME/Applications/wayutils-05_05_2025-xplshn.dwfs.AppBundle"
    if [ -z "$ENABLE_GUI" ] && [ "$(tty)" = "/dev/tty5" ] || [ REGARDLESS = 1 ] ; then
        if [ -f "$CMD_START_GUI_SESSION" ]; then
            read -rp "Do you want to start a graphical session? ["$(basename "$CMD_START_GUI_SESSION")"] " answer
            case "$answer" in
                y|yes)
                    #ENABLE_GUI=1 $DBUS_CMD $CMD_START_GUI_SESSION
                    ENABLE_GUI=1 $DBUS_CMD $CMD_START_GUI_SESSION --pbundle_link /usr/bin/sway
                    ;;
                *)
                    echo "Graphical session not started."
                    ;;
            esac
        fi
    fi
}

cleanup() {
    echo "#@______ SESSION FROM ${0##*/} on $(date '+%A, %B %d, %Y at %T') ______@#" >> "$HISTFILE"
    cat "$HISTFILE" >> "$HOME/.sh_history" 2>/dev/null
    rm "$HISTFILE" 2>/dev/null
}

load_profile
set_prompt
alias_loader
start_GSession
#base16_loader
#show_weatherInfo
britto # Birthday reminder, at https://github.com/xplshn/britto

# Load external hooks, etc
for script in ~/.config/shrc.d/*.sh ; do
	if [ -r "$script" ] ; then
		. "$script"
	fi
done
unset script
